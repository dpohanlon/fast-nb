name: Build and Publish Wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.12", "3.13"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          git submodule update --init --recursive
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --only main

      - name: Install dependencies Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install python3-dev

      - name: Build Wheels with cibuildwheel
        uses: pypa/cibuildwheel@v2.22.0
        with:
          output-dir: wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-py${{ matrix.python-version }}
          path: wheelhouse/*.whl

  # release:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: wheels
  #         path: dist/

  #     - name: Upload asset to GitHub Release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         echo "Attaching artifact to release..."
  #         gh release upload "${{ github.ref_name }}" dist/*.whl --clobber

  # publish_wheels:
  #   needs: build_wheels
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Download wheels
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: wheels
  #         path: wheelhouse

  #     - name: Publish to PyPI
  #       uses: pypa/gh-action-pypi-publish@v1.4.2
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_API_TOKEN }}
  #         repository_url: https://upload.pypi.org/legacy/
  #         skip_existing: true
  #       if: github.ref == 'refs/heads/main' && github.event_name == 'push'
