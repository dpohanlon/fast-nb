name: Build and Publish Wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-13, macos-14]
        # python-version: ["3.12", "3.13"]
        os: [macos-14]
        python-version: ["3.12", "3.13"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          git submodule update --init --recursive
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --only main

      - name: Install dependencies Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install python3-dev

      - name: Build wheels with cibuildwheel
        uses: pypa/cibuildwheel@v2.22.0
        with:
          output-dir: wheelhouse
        env:
          CIBW_SKIP: "*musllinux*"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: wheelhouse/*.whl

  release:
    needs: [build_wheels]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist/

      - name: Upload asset to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Attaching artifact to release..."
          gh release upload "${{ github.ref_name }}" dist/*.whl --clobber

  publish:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist/
          merge-multiple: true
      - name: Publish to test PyPI
        if: ${{!startsWith(github.ref, 'refs/tags')}}
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish tagged version to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
